version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2222
      ZOOKEEPER_TICK_TIME: 3000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9093:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ZOOKEEPER:2222
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29029, PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 7000:7000
    environment:
      KAFKA_BROKERCONNECT: kafka:29029

  mongodb:
    image: mongo:latest
    command: [--auth]
    container_name: stockdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: stockAdmin
      MONGO_INITDB_ROOT_PASSWORD: stockPassword
    ports:
      - 28018:27017
    volumes:
      - mongo-data:/stock/db

  springboot-app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_DATA_MONGODB_HOST: mongodb
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: stockdb
    depends_on:
      - mongodb
    ports:
      - 1212:1212

volumes:
  mongo-data:

networks:
  broker-kafka:
    driver: bridge